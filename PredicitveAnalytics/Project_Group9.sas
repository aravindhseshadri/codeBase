/*** LIBRARY DEFINITION ***/

LIBNAME PA "H:\Project";

/******************************* PANEL REGRESSION ***********************************************/

/********** KLEENEX ***************/

/*** DATA IMPORT - PROD_TISSUE ***/

PROC IMPORT DATAFILE="H:\Project\prod_tissue.csv"
OUT=TISSUE
DBMS=CSV
REPLACE;
DELIMITER=",";
GETNAMES=YES;
RUN;

PROC PRINT DATA=TISSUE(OBS=50);
RUN;

PROC CONTENTS DATA=TISSUE;
RUN;

/*** DATA IMPORT - GROCERY & DRUG***/

DATA GROCERY;
INFILE 'H:\Project\factiss_groc_1114_1165.txt' FIRSTOBS=2;
INPUT IRI_KEY $ 1-7 WEEK $ 9-12 SY $ 14-15 GE $ 17-18 VEND $ 20-24 ITEM $ 26-30 UNITS 32-36 DOLLARS 38-45 
F $ 47-50 D $ 52-52 PR $ 54-54;
RUN;

DATA DRUG;
INFILE 'H:\Project\factiss_drug_1114_1165.txt' FIRSTOBS=2;
INPUT IRI_KEY $ 1-7 WEEK $ 9-12 SY $ 14-15 GE $ 17-18 VEND $ 20-24 ITEM $ 26-30 UNITS 32-36 DOLLARS 38-45 
F $ 47-50 D $ 52-52 PR $ 54-54;
RUN;

%MACRO IMPORT(OUT=);

DATA &OUT._1;
SET &OUT.;

IF SY="0" 
THEN SY="00";

IF SY="6" 
THEN SY="06";

IF SY="7" 
THEN SY="07";

RUN;

DATA &OUT._1;
SET &OUT._1;

IF GE="1"
THEN GE="01";

IF GE="2"
THEN GE="02";

IF GE="3"
THEN GE="03";

IF GE="4"
THEN GE="04";

IF GE="5"
THEN GE="05";

RUN;

DATA &OUT._1;
SET &OUT._1;

IF LENGTH(ITEM)=2 THEN ITEM="000"||TRIM(ITEM);

IF LENGTH(ITEM)=3 THEN ITEM="00"||TRIM(ITEM);

IF LENGTH(ITEM)=4 THEN ITEM="0"||TRIM(ITEM);

RUN;

DATA &OUT._1;
SET &OUT._1;

IF LENGTH(VEND)=2 THEN VEND="000"||TRIM(VEND);

IF LENGTH(VEND)=3 THEN VEND="00"||TRIM(VEND);

IF LENGTH(VEND)=4 THEN VEND="0"||TRIM(VEND);

RUN;

DATA &OUT._1;
SET &OUT._1;

UPC = SY||"-"||GE||"-"||VEND||"-"||ITEM;

RUN;

PROC CONTENTS DATA=&OUT._1;
RUN;

%MEND IMPORT;

%IMPORT(OUT=GROCERY);
%IMPORT(OUT=DRUG);

/*** UNION DRUG AND GROCERY ***/

DATA DR_GR;
SET DRUG_1 GROCERY_1;
RUN;

/********* JOINING DRUG_GROCERY DATASET WITH PROD_TISSUE DATASET*******/
PROC SQL;
CREATE TABLE DRUG_GROCERY AS
SELECT A.*,B.* FROM
(SELECT * FROM DR_GR) AS A
LEFT JOIN
(SELECT * FROM TISSUE) AS B
ON A.UPC=B.UPC;

PROC PRINT DATA=DRUG_GROCERY(OBS=20);
RUN;

/************************FILTERING THE JOINED DATASET TO GET ONLY KLEENEX DATA******/
PROC SQL;
CREATE TABLE DRUG_GROCERY_KLEENEX AS
SELECT * FROM DRUG_GROCERY WHERE L5 IN ('KLEENEX','KLEENEX BOU','KLEENEX CAS',
'KLEENEX COL','KLEENEX EXP','KLEENEX SOF','KLEENEX TRA','KLEENEX ULT');
QUIT;

/********************FILTERING KLEENEX_FINAL1 DATASET TO GET THE DETAILS OF STORES WHICH HAVE DATA FOR ALL 52 WEEKS TO GET BALANCED
 PANEL DATA***/
PROC SQL;
CREATE TABLE KLEENEX_FINAL AS
SELECT IRI_KEY,COUNT(DISTINCT WEEK) AS DISTINCT_WEEKS FROM DRUG_GROCERY_KLEENEX
GROUP BY IRI_KEY
HAVING DISTINCT_WEEKS=52;
QUIT;

PROC SQL;
CREATE TABLE KLEENEX_FINAL1 AS
SELECT * FROM DRUG_GROCERY_KLEENEX WHERE IRI_KEY IN
(SELECT IRI_KEY FROM KLEENEX_FINAL);
QUIT;

/*******************************CALCULATING TOTAL NUMBER OF SHEETS SOLD AND PRICE PER SHEET********/
DATA PA.KLEENEX_FINAL1;
SET KLEENEX_FINAL1;

TOT_VOL = VOL_EQ*100*UNITS;
PRICE_PER_SHEET = DOLLARS/TOT_VOL;

RUN;

PROC UNIVARIATE DATA=PA.KLEENEX_FINAL1;
VAR PRICE_PER_SHEET;
RUN;

PROC PRINT DATA=PA.KLEENEX_FINAL1(OBS=100);
RUN;

/****************************CREATING KLEENEX_CALC DATASET*****/
PROC SQL;
CREATE TABLE KLEENEX_CALC AS
SELECT IRI_KEY,WEEK,UNITS,TOT_VOL,DOLLARS,F,D,PR,UPC,PRICE_PER_SHEET FROM PA.KLEENEX_FINAL1;
QUIT;

PROC PRINT DATA=KLEENEX_CALC(OBS=10);
RUN;

PROC FREQ DATA=KLEENEX_CALC;
TABLE F;
RUN;

PROC FREQ DATA=KLEENEX_CALC;
TABLE D;
RUN;

PROC FREQ DATA=KLEENEX_CALC;
TABLE PR;
RUN;

PROC CONTENTS DATA=KLEENEX_CALC;
RUN;

DATA KLEENEX_CALC;
SET KLEENEX_CALC;

IF F='NONE' THEN F_1=0;
ELSE F_1=1;

IF D='0' THEN D_1=0;
ELSE D_1=1;

IF PR='0' THEN PR_1=0;
ELSE PR_1=1;

RUN;

PROC CONTENTS DATA=KLEENEX_CALC;
RUN;

/**********************CREATING KLEENEX_GROUPED DATASET FROM KLEENEX_CALC BY GROUPING DATA BY IRI_KEY, WEEK COMBINATION***/
PROC SQL;
CREATE TABLE KLEENEX_GROUPED AS
SELECT IRI_KEY,WEEK,UPC,SUM(UNITS) AS TOT_UNITS, SUM(TOT_VOL) AS TOT_SHEETS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS FROM KLEENEX_CALC
GROUP BY IRI_KEY,WEEK,UPC;
QUIT;

PROC PRINT DATA=KLEENEX_GROUPED (OBS=100);
RUN;

/*******************EXPORTING KLEENEX_GROUPED DATASET**********************/
PROC EXPORT DATA=KLEENEX_GROUPED
OUTFILE="H:\Project\KLEENEX_GROUPED.CSV"
DBMS=CSV;
RUN;

/***********************************CALCULATING WEIGHTED PRICE, WEIGHTED FEATURE, WEIGHTED DISPLAY AND WEIGHTED PROMOTION***/
PROC SQL;
CREATE TABLE KLEENEX_WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEK_SHEETS
FROM KLEENEX_CALC
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE KLEENEX_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM KLEENEX_GROUPED) AS A
LEFT JOIN
(SELECT * FROM KLEENEX_WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC PRINT DATA=KLEENEX_GROUPED_1 (OBS=500);
RUN;

DATA KLEENEX_GROUPED_1;
SET KLEENEX_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

RUN;

PROC PRINT DATA=KLEENEX_GROUPED_1(OBS=100);
RUN;

/********************CREATING KLEENEX_FINAL DATASET TO RUN PANEL REGRESSION**************************/
PROC SQL;
CREATE TABLE PA.KLEENEX_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS SUM_UNITS, SUM(TOT_SHEETS) AS SUM_SHEETS, SUM(TOT_DOLLARS) AS SUM_DOLLARS, SUM(W_PRICE) AS SUM_W_PRICE,
SUM(W_FEATURE) AS SUM_W_FEATURE, SUM(W_DISPLAY) AS SUM_W_DISPLAY, SUM(W_PROMOTION) AS SUM_W_PROMOTION
FROM KLEENEX_GROUPED_1
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=PA.KLEENEX_FINAL(OBS=500);
RUN;

PROC EXPORT DATA=PA.KLEENEX_FINAL
OUTFILE="H:\Project\KLEENEX_FINAL.CSV"
DBMS=CSV;
RUN;


/***** KLEENEX_FINAL PANEL REGRESSION******/

DATA KLEENEX_PAN;
SET PA.KLEENEX_FINAL;
RENAME SUM_UNITS=UNITS_SOLD SUM_SHEETS=SHEETS_SOLD SUM_DOLLARS=DOLLARS SUM_W_PRICE=WEIGHTED_PRICE SUM_W_FEATURE=WEIGHTED_FEATURE
SUM_W_DISPLAY=WEIGHTED_DISPLAY SUM_W_PROMOTION=WEIGHTED_PRICE_REUDCTION;
RUN;

PROC PRINT DATA=KLEENEX_PAN (OBS=50);
RUN;

/****** NON-LINEARITY CHECK******/

PROC SGPLOT DATA=KLEENEX_PAN;
SCATTER X=WEIGHTED_PRICE Y=SHEETS_SOLD;
RUN;

/*******MULTICOLLINEARITY CHECK*****/

PROC CORR DATA=KLEENEX_PAN;
VAR SHEETS_SOLD DOLLARS WEIGHTED_PRICE WEIGHTED_FEATURE WEIGHTED_DISPLAY WEIGHTED_PRICE_REUDCTION;
RUN;

PROC REG DATA=KLEENEX_PAN;
MODEL SHEETS_SOLD = WEIGHTED_PRICE WEIGHTED_FEATURE WEIGHTED_DISPLAY WEIGHTED_PRICE_REUDCTION/ VIF COLLIN;
RUN;

/***********PANEL REGRESSION**********/

DATA PA.KLEENEX_PAN;
SET KLEENEX_PAN;
WT_PRICESQ = WEIGHTED_PRICE * WEIGHTED_PRICE;
WT_FEATURESQ = WEIGHTED_FEATURE * WEIGHTED_FEATURE;
WT_DISPLAYSQ = WEIGHTED_DISPLAY * WEIGHTED_DISPLAY;
WT_PRREDSQ = WEIGHTED_PRICE_REUDCTION * WEIGHTED_PRICE_REUDCTION;
WTPRICE_WTFEATURE = WEIGHTED_PRICE * WEIGHTED_FEATURE;
WTPRICE_WTDISP = WEIGHTED_PRICE * WEIGHTED_DISPLAY;
WTPRICE_WTPROMO = WEIGHTED_PRICE * WEIGHTED_PRICE_REUDCTION;
WTFEATURE_WTDISP = WEIGHTED_FEATURE * WEIGHTED_DISPLAY;
WTFEATURE_WTPRRED = WEIGHTED_FEATURE * WEIGHTED_PRICE_REUDCTION;
WTDISP_WTPRRED = WEIGHTED_DISPLAY * WEIGHTED_PRICE_REUDCTION;
WTDISP_WTFEATURE_WTPRRED = WEIGHTED_DISPLAY * WEIGHTED_FEATURE * WEIGHTED_PRICE_REUDCTION;
RUN;

PROC PRINT DATA=PA.KLEENEX_PAN (OBS=150);
RUN;

PROC PANEL DATA = PA.KLEENEX_PAN;
ID IRI_KEY WEEK;       
MODEL SHEETS_SOLD = WEIGHTED_PRICE WT_PRICESQ WEIGHTED_DISPLAY WEIGHTED_FEATURE 
WEIGHTED_PRICE_REUDCTION WTFEATURE_WTPRRED WTDISP_WTPRRED WTDISP_WTFEATURE_WTPRRED/FIXTWO RANTWO;    
RUN;

PROC MEANS DATA = KLEENEX_PAN;
VAR SHEETS_SOLD WEIGHTED_PRICE WEIGHTED_DISPLAY WEIGHTED_FEATURE WEIGHTED_PRICE_REUDCTION;
RUN;

/****************** PROCTOR & GAMBLE *******************/

/*** DATA IMPORT - PROD_TISSUE ***/

PROC IMPORT DATAFILE="H:\Project\prod_tissue.csv"
OUT=TISSUE
DBMS=CSV
REPLACE;
DELIMITER=",";
GETNAMES=YES;
RUN;

PROC PRINT DATA=TISSUE(OBS=50);
RUN;

PROC CONTENTS DATA=TISSUE;
RUN;
/*** DATA IMPORT - GROCERY & DRUG***/

DATA GROCERY;
INFILE 'H:\Project\factiss_groc_1114_1165.txt' FIRSTOBS=2;
INPUT IRI_KEY $ 1-7 WEEK $ 9-12 SY $ 14-15 GE $ 17-18 VEND $ 20-24 ITEM $ 26-30 UNITS 32-36 DOLLARS 38-45 
F $ 47-50 D $ 52-52 PR $ 54-54;
RUN;

DATA DRUG;
INFILE 'H:\Project\factiss_drug_1114_1165.txt' FIRSTOBS=2;
INPUT IRI_KEY $ 1-7 WEEK $ 9-12 SY $ 14-15 GE $ 17-18 VEND $ 20-24 ITEM $ 26-30 UNITS 32-36 DOLLARS 38-45 
F $ 47-50 D $ 52-52 PR $ 54-54;
RUN;

%MACRO IMPORT(OUT=);

DATA &OUT._1;
SET &OUT.;

IF SY="0" 
THEN SY="00";

IF SY="6" 
THEN SY="06";

IF SY="7" 
THEN SY="07";

RUN;

DATA &OUT._1;
SET &OUT._1;

IF GE="1"
THEN GE="01";

IF GE="2"
THEN GE="02";

IF GE="3"
THEN GE="03";

IF GE="4"
THEN GE="04";

IF GE="5"
THEN GE="05";

RUN;

DATA &OUT._1;
SET &OUT._1;

IF LENGTH(ITEM)=2 THEN ITEM="000"||TRIM(ITEM);

IF LENGTH(ITEM)=3 THEN ITEM="00"||TRIM(ITEM);

IF LENGTH(ITEM)=4 THEN ITEM="0"||TRIM(ITEM);

RUN;

DATA &OUT._1;
SET &OUT._1;

IF LENGTH(VEND)=2 THEN VEND="000"||TRIM(VEND);

IF LENGTH(VEND)=3 THEN VEND="00"||TRIM(VEND);

IF LENGTH(VEND)=4 THEN VEND="0"||TRIM(VEND);

RUN;

DATA &OUT._1;
SET &OUT._1;

UPC = SY||"-"||GE||"-"||VEND||"-"||ITEM;

RUN;

PROC CONTENTS DATA=&OUT._1;
RUN;

%MEND IMPORT;

%IMPORT(OUT=GROCERY);
%IMPORT(OUT=DRUG);

/*** UNION DRUG AND GROCERY ***/

DATA DR_GR;
SET DRUG_1 GROCERY_1;
RUN;
/********* JOINING DRUG_GROCERY DATASET WITH PROD_TISSUE DATASET*******/

PROC SQL;
CREATE TABLE DRUG_GROCERY AS
SELECT A.*,B.* FROM
(SELECT * FROM DR_GR) AS A
LEFT JOIN
(SELECT * FROM TISSUE) AS B
ON A.UPC=B.UPC;

PROC PRINT DATA=DRUG_GROCERY(OBS=20);
RUN;
/************************FILTERING THE JOINED DATASET TO GET ONLY PROCTOR & GAMBLE DATA******/

PROC SQL;
CREATE TABLE DRUG_GROCERY_PROCTOR_GAMBLE AS
SELECT * FROM DRUG_GROCERY WHERE L4 IN ('PROCTER & GAMBLE');
QUIT;

/*******************************CALCULATING TOTAL NUMBER OF SHEETS SOLD AND PRICE PER SHEET********/
DATA DRUG_GROCERY_PROCTOR_GAMBLE;
SET DRUG_GROCERY_PROCTOR_GAMBLE;

TOT_VOL = VOL_EQ*100*UNITS;
PRICE_PER_SHEET = DOLLARS/TOT_VOL;

RUN;


PROC PRINT DATA=DRUG_GROCERY_PROCTOR_GAMBLE(OBS=100);
RUN;
/****************************CREATING PROCTOR_GAMBLE DATASET*****/

PROC SQL;
CREATE TABLE PROCTOR_GAMBLE_CALC AS
SELECT IRI_KEY,WEEK,UNITS, TOT_VOL, DOLLARS, F, D, PR, UPC, PRICE_PER_SHEET FROM DRUG_GROCERY_PROCTOR_GAMBLE;
QUIT;

PROC PRINT DATA=PROCTOR_GAMBLE_CALC(OBS=10);
RUN;

PROC FREQ DATA=PROCTOR_GAMBLE_CALC;
TABLE F;
RUN;

PROC FREQ DATA=PROCTOR_GAMBLE_CALC;
TABLE D;
RUN;


DATA PROCTOR_GAMBLE_CALC;
SET PROCTOR_GAMBLE_CALC;

IF F='NONE' THEN F_1=0;
ELSE F_1=1;

IF D='0' THEN D_1=0;
ELSE D_1=1;

IF PR='0' THEN PR_1=0;
ELSE PR_1=1;

RUN;


/**********************CREATING PROCTOR_GAMBLE_GROUPED DATASET FROM PROCTOR_GAMBLE_CALC BY GROUPING DATA BY IRI_KEY, WEEK COMBINATION***/
PROC SQL;
CREATE TABLE PROCTOR_GAMBLE_GROUPED AS
SELECT IRI_KEY,WEEK,UPC,SUM(UNITS) AS TOT_UNITS, SUM(TOT_VOL) AS TOT_SHEETS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS FROM PROCTOR_GAMBLE_CALC
GROUP BY IRI_KEY,WEEK,UPC;
QUIT;

/*******************EXPORTING PROCTOR_GAMBLE_GROUPED DATASET**********************/

PROC EXPORT DATA=PROCTOR_GAMBLE_GROUPED
OUTFILE="H:\Project\PROCTOR_GAMBLE_GROUPED.CSV"
DBMS=CSV;
RUN;

/***********************************CALCULATING WEIGHTED PRICE, WEIGHTED FEATURE, WEIGHTED DISPLAY AND WEIGHTED PROMOTION***/

PROC SQL;
CREATE TABLE PROCTOR_GAMBLE__WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEKS_SHEETS
FROM PROCTOR_GAMBLE_CALC
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE PROCTOR_GAMBLE_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM PROCTOR_GAMBLE_GROUPED) AS A
LEFT JOIN
(SELECT * FROM PROCTOR_GAMBLE__WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC PRINT DATA=PROCTOR_GAMBLE_GROUPED_1 (OBS=20);
RUN;

DATA PROCTOR_GAMBLE_GROUPED_1;
SET PROCTOR_GAMBLE_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEKS_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEKS_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEKS_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEKS_SHEETS);

RUN;

PROC PRINT DATA=PROCTOR_GAMBLE_GROUPED_1(OBS=20);
RUN;

/********************CREATING PROCTOR_GAMBLE_FINAL DATASET TO RUN PANEL REGRESSION**************************/

PROC SQL;
CREATE TABLE PA.PROCTOR_GAMBLE_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS SUM_UNITS, SUM(TOT_SHEETS) AS SUM_SHEETS, SUM(TOT_DOLLARS) AS SUM_DOLLARS,
SUM(W_PRICE) AS SUM_W_PRICE, SUM(W_FEATURE) AS SUM_W_FEATURE, SUM(W_DISPLAY) AS SUM_W_DISPLAY, SUM(W_PROMOTION) AS SUM_W_PROMOTION
FROM PROCTOR_GAMBLE_GROUPED_1
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=PA.PROCTOR_GAMBLE_FINAL(OBS=200);
RUN;

PROC EXPORT DATA=PA.PROCTOR_GAMBLE_FINAL
OUTFILE="H:\Project\PROCTOR_GAMBLE_FINAL.CSV"
DBMS=CSV;
RUN;


/***********CREATING DATASET TO CHECK FOR CROSS ELASTICITIES***************/

PROC SQL;
CREATE TABLE KLEENEX_CE AS
SELECT A.*, B.SUM_W_PRICE AS WEIGHTED_PRICE_PG, B.SUM_W_FEATURE AS WEIGHTED_FEATURE_PG, 
B.SUM_W_DISPLAY AS WEIGHTED_DISPLAY_PG, B.SUM_W_PROMOTION AS WEIGHTED_PRRED_PG
FROM 
(SELECT * FROM PA.KLEENEX_FINAL) AS A 
JOIN 
(SELECT * FROM PA.PROCTOR_GAMBLE_FINAL) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK
WHERE B.IRI_KEY NOT IN ('256975','257178','8003042','8041587');
QUIT;

PROC PRINT DATA=KLEENEX_CE (OBS=200);
RUN;

DATA PA.KLEENEX_CE;
SET KLEENEX_CE;
RENAME SUM_UNITS=UNITS_SOLD SUM_SHEETS=SHEETS_SOLD SUM_DOLLARS=DOLLARS SUM_W_PRICE=WEIGHTED_PRICE SUM_W_FEATURE=WEIGHTED_FEATURE
SUM_W_DISPLAY=WEIGHTED_DISPLAY SUM_W_PROMOTION=WEIGHTED_PRICE_REUDCTION;
RUN;

DATA PA.KLEENEX_CE;
SET PA.KLEENEX_CE;
WT_PRICESQ = WEIGHTED_PRICE * WEIGHTED_PRICE;
WT_FEATURESQ = WEIGHTED_FEATURE * WEIGHTED_FEATURE;
WT_DISPLAYSQ = WEIGHTED_DISPLAY * WEIGHTED_DISPLAY;
WT_PRREDSQ = WEIGHTED_PRICE_REUDCTION * WEIGHTED_PRICE_REUDCTION;
WTPRICE_WTFEATURE = WEIGHTED_PRICE * WEIGHTED_FEATURE;
WTPRICE_WTDISP = WEIGHTED_PRICE * WEIGHTED_DISPLAY;
WTPRICE_WTPROMO = WEIGHTED_PRICE * WEIGHTED_PRICE_REUDCTION;
WTFEATURE_WTDISP = WEIGHTED_FEATURE * WEIGHTED_DISPLAY;
WTFEATURE_WTPRRED = WEIGHTED_FEATURE * WEIGHTED_PRICE_REUDCTION;
WTDISP_WTPRRED = WEIGHTED_DISPLAY * WEIGHTED_PRICE_REUDCTION;
WTDISP_WTFEATURE_WTPRRED = WEIGHTED_DISPLAY * WEIGHTED_FEATURE * WEIGHTED_PRICE_REUDCTION;
WEIGHTED_PRICE_PGSQ = WEIGHTED_PRICE_PG * WEIGHTED_PRICE_PG;
RUN;

PROC PRINT DATA=PA.KLEENEX_CE (OBS=200);
RUN;

PROC PANEL DATA = PA.KLEENEX_CE;
ID IRI_KEY WEEK;       
MODEL SHEETS_SOLD = WEIGHTED_PRICE WT_PRICESQ WEIGHTED_DISPLAY WEIGHTED_FEATURE WEIGHTED_PRICE_REUDCTION 
WTFEATURE_WTPRRED WTDISP_WTPRRED WTDISP_WTFEATURE_WTPRRED 
WEIGHTED_PRICE_PG WEIGHTED_FEATURE_PG WEIGHTED_DISPLAY_PG WEIGHTED_PRRED_PG/FIXTWO RANTWO;    
RUN;

PROC SGPLOT DATA=PA.KLEENEX_CE;
SCATTER X=WEIGHTED_PRICE_PG Y=SHEETS_SOLD;
RUN;

PROC MEANS DATA=PA.KLEENEX_CE N MEAN;
VAR SHEETS_SOLD WEIGHTED_PRICE WT_PRICESQ WEIGHTED_DISPLAY WEIGHTED_FEATURE WEIGHTED_PRICE_REUDCTION
WEIGHTED_PRICE_PG WEIGHTED_FEATURE_PG WEIGHTED_DISPLAY_PG WEIGHTED_PRRED_PG;
RUN;






/************************************* RFM ANALYSIS *******************************************/



/*** DATA IMPORT ***/

/*** PROD_TISSUE ***/

DATA TISSUE;
INFILE "H:\Project\prod_tissue.csv" DLM=',' FIRSTOBS=2 MISSOVER;
LENGTH L4 $30. UPC $30.;
INPUT L1 $ L2 $	L3 $ L4 $ L5 $ L9 $ Level $ UPC $ SY $ GE $ VEND $ ITEM $ STUBSPEC $ VOL_EQ PRODUCT_TYPE $ COLOR $ SIZE $ ADDITIVES $
NUM_PLY	$ DISPENSER	$ NUM_SHEETS $;
RUN;

PROC CONTENTS DATA = TISSUE;
RUN;

PROC PRINT DATA = TISSUE(OBS=10);
RUN;

/*** MANIPULATING COLUPC ***/

PROC SQL;
CREATE TABLE TISSUE AS
SELECT * FROM TISSUE WHERE L4 IN ('KIMBERLY CLARK CORP');
QUIT;

DATA TISSUE;
SET TISSUE;

IF LENGTH(ITEM)=2 THEN ITEM="000"||TRIM(ITEM);
IF LENGTH(ITEM)=3 THEN ITEM="00"||TRIM(ITEM);
IF LENGTH(ITEM)=4 THEN ITEM="0"||TRIM(ITEM);

IF LENGTH(VEND)=2 THEN VEND="000"||TRIM(VEND);
IF LENGTH(VEND)=3 THEN VEND="00"||TRIM(VEND);
IF LENGTH(VEND)=4 THEN VEND="0"||TRIM(VEND);

SY=TRIM(SY);
GE=TRIM(GE);
VEND=TRIM(VEND);
ITEM=TRIM(ITEM);

COLUPC=SY||GE||VEND||ITEM;
RUN;

DATA TISSUE (KEEP = L4 COLUPC);
SET TISSUE;
COLUPC=COMPRESS(COLUPC);
RUN;

PROC PRINT DATA=TISSUE;
RUN;

/*** IMPORTING GROCERY AND DRUG PANEL DATA ***/

DATA PANEL_DRUG;
INFILE 'H:\Project\factiss_PANEL_DR_1114_1165.dat' FIRSTOBS=2 DLM='09'x;
LENGTH COLUPC $13.;
INPUT PANID WEEK UNITS OUTLET $ DOLLARS IRI_KEY $ COLUPC $;
RUN;

DATA PANEL_GROCERY;
INFILE 'H:\Project\factiss_PANEL_GR_1114_1165.dat' FIRSTOBS=2 DLM='09'x;
LENGTH COLUPC $13.;
INPUT PANID WEEK UNITS OUTLET $ DOLLARS IRI_KEY $ COLUPC $;
RUN;

DATA PANEL_MA;
INFILE 'H:\Project\factiss_PANEL_MA_1114_1165.dat' FIRSTOBS=2 DLM='09'x;
LENGTH COLUPC $13.;
INPUT PANID WEEK UNITS OUTLET $ DOLLARS IRI_KEY $ COLUPC $;
RUN;

/*** UNION BETWEEN GROCERY, DRUG AND MA DATA ***/

DATA ALL_STORES;
SET PANEL_GROCERY PANEL_MA PANEL_DRUG;

IF LENGTH(COLUPC)=11 THEN COLUPC="0"||COLUPC;

RUN;

PROC CONTENTS DATA=ALL_STORES;
RUN;

PROC PRINT DATA=ALL_STORES(OBS=20);
RUN;

PROC SQL;
CREATE TABLE ALL_STORES AS
SELECT * FROM
(SELECT * FROM ALL_STORES) AS A 
INNER JOIN
(SELECT * FROM TISSUE) AS B
ON A.COLUPC=B.COLUPC;
QUIT;


/*** JOINING WEEK TRANSLATION ***/

PROC IMPORT DATAFILE="H:\Project\week_translation.csv"
OUT=WEEK_TRANS
DBMS=CSV
REPLACE;
DELIMITER=",";
GETNAMES=YES;
RUN;

PROC PRINT DATA=WEEK_TRANS(OBS=20);
RUN;

PROC CONTENTS DATA=WEEK_TRANS;
RUN;

PROC SQL;
CREATE TABLE PANEL_FINAL AS
SELECT * FROM
(SELECT * FROM ALL_STORES) AS A 
LEFT JOIN
(SELECT * FROM WEEK_TRANS) AS B
ON A.WEEK=B.WEEK;
QUIT;

PROC PRINT DATA=PANEL_FINAL(OBS=20);
RUN;

DATA PANEL_FINAL;
SET PANEL_FINAL;
LAST_WEEK='30DEC2001'D;

FORMAT LAST_WEEK DDMMYY10.;

RUN;

PROC PRINT DATA = PANEL_FINAL(OBS=200);
RUN;

*Summarise Monetary, transactions (frequency) and recency by custid;
PROC SQL;
CREATE TABLE PRE_RFM AS
SELECT PANID, SUM(DOLLARS) AS MONETARY,COUNT(ENDING_WEEK) AS FREQUENCY,MAX(ENDING_WEEK) AS LAST_PURCHASE,MAX(LAST_WEEK) AS LAST_WEEK,
MIN(DATDIF(ENDING_WEEK,LAST_WEEK,'ACTUAL')) AS RECENCY
FROM PANEL_FINAL
GROUP BY PANID
HAVING FREQUENCY>1;
QUIT;

/*** CORRELATION ***/

PROC CORR DATA=PRE_RFM;
VAR MONETARY FREQUENCY RECENCY;
RUN;

DATA PRE_RFM;
SET PRE_RFM;

FORMAT LAST_PURCHASE DDMMYY10.;
FORMAT LAST_WEEK DDMMYY10.;
ID = 1;
RUN;

PROC PRINT DATA=PRE_RFM(OBS=200);
RUN;

PROC MEANS DATA=PRE_RFM MIN P20 P40 P60 P80 MAX;
VAR MONETARY RECENCY;
OUTPUT OUT=M_PERCENTILES MIN= P20= P40= P60= P80= MAX=/ AUTONAME;
RUN;

DATA M_PERCENTILES;
SET M_PERCENTILES;
ID = 1;
RUN;

PROC PRINT DATA=M_PERCENTILES;
RUN;

PROC SQL;
CREATE TABLE PANEL_WITH_CLUSTER AS
SELECT * FROM
(SELECT * FROM PRE_RFM) AS A 
LEFT JOIN
(SELECT * FROM M_PERCENTILES) AS B
ON A.ID=B.ID;
QUIT;

PROC PRINT DATA=PANEL_WITH_CLUSTER(OBS=20);
RUN;

DATA PANEL_WITH_CLUSTER (DROP = LAST_PURCHASE LAST_WEEK ID _TYPE_ _FREQ_);
SET PANEL_WITH_CLUSTER;

IF (MONETARY > MONETARY_P80) THEN CLUSTER=1;
ELSE IF (MONETARY > MONETARY_P60 & RECENCY > RECENCY_P80) THEN CLUSTER=2;
ELSE CLUSTER=0;
RUN;

PROC PRINT DATA=PANEL_WITH_CLUSTER(OBS=20);
RUN;

PROC FREQ DATA=PANEL_WITH_CLUSTER;
TABLE CLUSTER;
RUN;

PROC SQL;
CREATE TABLE CLUSTER1 AS
SELECT * FROM PANEL_WITH_CLUSTER WHERE CLUSTER=1;
QUIT;

PROC SQL;
CREATE TABLE CLUSTER2 AS
SELECT * FROM PANEL_WITH_CLUSTER WHERE CLUSTER=2;
QUIT;


/******* DEMOGRAPHIC DATA *******************/

PROC IMPORT DATAFILE='H:\Project\ads demo1.csv'
OUT=DEMOGRAPHICS
DBMS=CSV
REPLACE;
GETNAMES=YES;
DELIMITER=",";
RUN;

PROC PRINT DATA = DEMOGRAPHICS(OBS=20);RUN;


DATA DEMOGRAPHICS(KEEP = PANID INCOME FAM_SIZE RESIDENT_TYPE AGE_MALE_HH EDUC_MALE_HH OCC_MALE_HH MALE_WORK_HR AGE_FEMALE_HH EDUC_FEMALE_HH 
OCC_FEMALE_HH FEMALE_WORK_HR NUM_DOGS NUM_CATS CHILD_AGEGP MARITAL_STATUS);
SET DEMOGRAPHICS(RENAME = (Panelist_ID = PANID Combined_Pre_Tax_Income_of_HH = INCOME Family_Size = FAM_SIZE 
Type_of_Residential_Possession = RESIDENT_TYPE Age_Group_Applied_to_Male_HH	= AGE_MALE_HH Education_Level_Reached_by_Male = EDUC_MALE_HH 
Occupation_Code_of_Male_HH = OCC_MALE_HH Male_Working_Hour_Code	= MALE_WORK_HR Age_Group_Applied_to_Female_HH = AGE_FEMALE_HH 
Education_Level_Reached_by_Femal = EDUC_FEMALE_HH Occupation_Code_of_Female_HH = OCC_FEMALE_HH Female_Working_Hour_Code = FEMALE_WORK_HR 
Number_of_Dogs = NUM_DOGS Number_of_Cats = NUM_CATS Children_Group_Code = CHILD_AGEGP Marital_Status = MARITAL_STATUS));
RUN;

PROC PRINT DATA = DEMOGRAPHICS(OBS=20);RUN;

PROC FREQ DATA=DEMOGRAPHICS;
TABLE AGE_MALE_HH;
RUN;

PROC CONTENTS DATA = DEMOGRAPHICS;RUN;

PROC SQL;
CREATE TABLE DEMOGRAPHICS_FINAL AS
SELECT * FROM DEMOGRAPHICS WHERE FAM_SIZE <> 0 AND RESIDENT_TYPE <> 0 AND AGE_MALE_HH <> 7 AND AGE_MALE_HH <> 0 AND EDUC_MALE_HH <> 9 AND EDUC_MALE_HH <> 0 AND OCC_MALE_HH <> 11 AND MALE_WORK_HR <> 7 AND 
AGE_FEMALE_HH <> 7 AND AGE_FEMALE_HH <> 0 AND EDUC_FEMALE_HH <> 9 AND EDUC_FEMALE_HH <> 0 AND OCC_FEMALE_HH <> 11 AND FEMALE_WORK_HR <> 7 AND MARITAL_STATUS <> 0 AND CHILD_AGEGP <> 0 ;
QUIT;

PROC PRINT DATA = DEMOGRAPHICS_FINAL(OBS=20);RUN;

PROC SQL;
CREATE TABLE DEMO_CUST AS
SELECT
B.PANID, 
CASE
	WHEN B.FAM_SIZE IN (4,5,6) THEN 'LARGE'
	ELSE 'REGULAR' END AS FAM_SIZE,

CASE
	WHEN B.INCOME IN (1,2,3,4) THEN 'LOW'
	WHEN B.INCOME IN (5,6,7,8) THEN 'MEDIUM'
	WHEN B.INCOME IN (9,10,11) THEN 'HIGH'
	ELSE 'VERY_HIGH' END AS FAM_INCOME,

CASE
	WHEN B.AGE_MALE_HH IN (1) THEN 'YOUNG'
	WHEN B.AGE_MALE_HH IN (2,3,4) THEN 'MID_AGE'
	ELSE 'ELDER' END AS AGE_MALE,

CASE
	WHEN B.AGE_FEMALE_HH IN (1) THEN 'YOUNG'
	WHEN B.AGE_FEMALE_HH IN (2,3,4) THEN 'MID_AGE'
	ELSE 'ELDER' END AS AGE_FEMALE,

CASE
	WHEN B.EDUC_MALE_HH IN (1,2,3) THEN 'SCHOOL'
	WHEN B.EDUC_MALE_HH IN (4,5,6) THEN 'COLLEGE'
	ELSE 'GRADUATE' END AS EDUC_MALE,

CASE
	WHEN B.EDUC_FEMALE_HH IN (1,2,3) THEN 'SCHOOL'
	WHEN B.EDUC_FEMALE_HH IN (4,5,6) THEN 'COLLEGE'
	ELSE 'GRADUATE' END AS EDUC_FEMALE,

CASE
	WHEN B.CHILD_AGEGP IN (1,2,3) THEN 'ONE'
	WHEN B.CHILD_AGEGP IN (4,5,6) THEN 'TWO'
	WHEN B.CHILD_AGEGP IN (7) THEN 'THREE'
	ELSE 'ZERO' END AS CHILD_NUM,

CASE 
	WHEN B.OCC_MALE_HH IN (1,2,3) THEN 'WHITE_HIGH'
	WHEN B.OCC_MALE_HH IN (4,5) THEN 'WHITE_LOW'
	WHEN B.OCC_MALE_HH IN (6,7,8,9) THEN 'BLUE'
	WHEN B.OCC_MALE_HH IN (10,13) THEN 'NO_OCCUP'
	ELSE 'OTHER' END AS OCCU_MALE,

CASE 
	WHEN B.OCC_FEMALE_HH IN (1,2,3) THEN 'WHITE_HIGH'
	WHEN B.OCC_FEMALE_HH IN (4,5) THEN 'WHITE_LOW'
	WHEN B.OCC_FEMALE_HH IN (6,7,8,9) THEN 'BLUE'
	WHEN B.OCC_FEMALE_HH IN (10,13) THEN 'NO_OCCUP'
	ELSE 'OTHER' END AS OCCU_FEMALE,

NUM_CATS + NUM_DOGS AS PETS_TOTAL

FROM DEMOGRAPHICS_FINAL B 
ORDER BY B.PANID;
QUIT;

PROC PRINT DATA = DEMO_CUST(OBS=20);RUN;

DATA DEMO_CUST;
SET DEMO_CUST;
IF FAM_SIZE='LARGE' THEN FAM_SIZE_L=1 ; ELSE FAM_SIZE_L=0;
IF FAM_SIZE='REGULAR' THEN FAM_SIZE_R=1 ; ELSE FAM_SIZE_R=0;

IF FAM_INCOME="LOW" THEN FAM_INCOME_L=1 ; ELSE FAM_INCOME_L=0;
IF FAM_INCOME="MEDIUM" THEN FAM_INCOME_M=1 ; ELSE FAM_INCOME_M=0;
IF FAM_INCOME="HIGH" THEN FAM_INCOME_H=1 ; ELSE FAM_INCOME_H=0;
IF FAM_INCOME="VERY_HIGH" THEN FAM_INCOME_VH=1 ; ELSE FAM_INCOME_VH=0;

IF AGE_MALE="YOUNG" THEN AGE_MY=1 ; ELSE AGE_MY=0;
IF AGE_MALE="MID_AGE" THEN AGE_MM=1 ; ELSE AGE_MM=0;
IF AGE_MALE="ELDER" THEN AGE_ME=1 ; ELSE AGE_ME=0;

IF AGE_FEMALE="YOUNG" THEN AGE_FY=1 ; ELSE AGE_FY=0;
IF AGE_FEMALE="MID_AGE" THEN AGE_FM=1 ; ELSE AGE_FM=0;
IF AGE_FEMALE="ELDER" THEN AGE_FE=1 ; ELSE AGE_FE=0;

IF EDUC_MALE="SCHOOL" THEN EDUC_MS=1 ; ELSE EDUC_MS=0;
IF EDUC_MALE="COLLEGE" THEN EDUC_MC=1 ; ELSE EDUC_MC=0;
IF EDUC_MALE="GRADUATE" THEN EDUC_MG=1 ; ELSE EDUC_MG=0;

IF EDUC_FEMALE="SCHOOL" THEN EDUC_FS=1 ; ELSE EDUC_FS=0;
IF EDUC_FEMALE="COLLEGE" THEN EDUC_FC=1 ; ELSE EDUC_FC=0;
IF EDUC_FEMALE="GRADUATE" THEN EDUC_FG=1 ; ELSE EDUC_FG=0;

IF OCCU_MALE="WHITE_HIGH" THEN OCC_MWH=1; ELSE OCC_MWH=0;
IF OCCU_MALE="WHITE_LOW" THEN OCC_MWL=1; ELSE OCC_MWL=0;
IF OCCU_MALE="BLUE" THEN OCC_MB=1; ELSE OCC_MB=0;
IF OCCU_MALE="NO_OCCUP" THEN OCC_MNO=1; ELSE OCC_MNO=0;
IF OCCU_MALE="OTHER" THEN OCC_MO=1; ELSE OCC_MO=0;

IF OCCU_FEMALE="WHITE_HIGH" THEN OCC_FWH=1; ELSE OCC_FWH=0;
IF OCCU_FEMALE="WHITE_LOW" THEN OCC_FWL=1; ELSE OCC_FWL=0;
IF OCCU_FEMALE="BLUE" THEN OCC_FB=1; ELSE OCC_FB=0;
IF OCCU_FEMALE="NO_OCCUP" THEN OCC_FNO=1; ELSE OCC_FNO=0;
IF OCCU_FEMALE="OTHER" THEN OCC_FO=1; ELSE OCC_FO=0;

IF CHILD_NUM='ONE' THEN CHILD_1=1; ELSE CHILD_1=0;
IF CHILD_NUM='TWO' THEN CHILD_2=1; ELSE CHILD_2=0;
IF CHILD_NUM='THREE' THEN CHILD_3=1; ELSE CHILD_3=0;
IF CHILD_NUM='ZERO' THEN CHILD_0=1; ELSE CHILD_0=0;

IF PETS_TOTAL=0 THEN PETS_0=1; ELSE PETS_0=0;
IF PETS_TOTAL NE 0 THEN PETS_GR_1=1; ELSE PETS_GR_1=0;

RUN;

PROC PRINT DATA = DEMO_CUST(OBS=20);RUN;

DATA DEMO_CUST (DROP = FAM_SIZE FAM_INCOME AGE_MALE AGE_FEMALE EDUC_MALE EDUC_FEMALE CHILD_NUM OCCU_MALE OCCU_FEMALE PETS_TOTAL);
SET DEMO_CUST;
RUN;

PROC PRINT DATA = DEMO_CUST(OBS=20);RUN;


PROC SQL;
CREATE TABLE CLUSTER1_DEMO AS
SELECT * FROM
(SELECT * FROM CLUSTER1) AS A 
INNER JOIN
(SELECT * FROM DEMO_CUST) AS B
ON A.PANID=B.PANID;
QUIT;

PROC PRINT DATA = CLUSTER1_DEMO(OBS=20);RUN;

DATA CLUSTER1_DEMO (DROP = MONETARY_Min RECENCY_Min MONETARY_P20 RECENCY_P20 MONETARY_P40 RECENCY_P40 MONETARY_P60 RECENCY_P60 MONETARY_P80 RECENCY_P80 MONETARY_Max 
RECENCY_Max	CLUSTER);
SET CLUSTER1_DEMO;
RUN;

PROC MEANS DATA=CLUSTER1_DEMO;RUN;






/******************************** MDC ***************************************/

/*********************** GROCERY *************************/

/*** IMPORTING GROCERY PANEL DATA ***/

DATA PANEL_GROCERY;
INFILE 'H:\Project\factiss_PANEL_GR_1114_1165.dat' FIRSTOBS=2 DLM='09'x;
LENGTH COLUPC $13.;
INPUT PANID WEEK $ UNITS OUTLET $ DOLLARS IRI_KEY $ COLUPC $;
RUN;

DATA PANEL_GROCERY;
SET PANEL_GROCERY;
IF LENGTH(COLUPC)=11 THEN COLUPC="0"||COLUPC;
RUN;

DATA PANEL_GROCERY(DROP = OUTLET);
SET PANEL_GROCERY(RENAME = (UNITS = P_UNITS DOLLARS = P_DOLLARS));
RUN;

PROC PRINT DATA=PANEL_GROCERY(OBS=20);RUN;

/*** IMPORTING GROCERY SCANNER DATA ***/

DATA GROCERY;
INFILE 'H:\Project\factiss_groc_1114_1165.txt' FIRSTOBS=2;
INPUT IRI_KEY $ 1-7 WEEK $ 9-12 SY $ 14-15 GE $ 17-18 VEND $ 20-24 ITEM $ 26-30 UNITS 32-36 DOLLARS 38-45 
F $ 47-50 D $ 52-52 PR $ 54-54;
RUN;

DATA GROCERY;
SET GROCERY;
IF LENGTH(ITEM)=2 THEN ITEM="000"||TRIM(ITEM);
IF LENGTH(ITEM)=3 THEN ITEM="00"||TRIM(ITEM);
IF LENGTH(ITEM)=4 THEN ITEM="0"||TRIM(ITEM);
RUN;

DATA GROCERY;
SET GROCERY;
IF LENGTH(VEND)=2 THEN VEND="000"||TRIM(VEND);
IF LENGTH(VEND)=3 THEN VEND="00"||TRIM(VEND);
IF LENGTH(VEND)=4 THEN VEND="0"||TRIM(VEND);
RUN;

DATA GROCERY;
SET GROCERY;
UPC = SY||GE||VEND||ITEM;
RUN;

DATA GROCERY;
SET GROCERY;
COLUPC=COMPRESS(UPC);
RUN;

DATA GROCERY (DROP = SY GE VEND ITEM UPC);
SET GROCERY;
RUN;

PROC PRINT DATA=GROCERY(OBS=20);RUN;

/*** JOINING GROCERY STORE AND PANEL DATA ***/

PROC SQL;
CREATE TABLE PS_GROCERY AS
SELECT * FROM
(SELECT * FROM GROCERY) AS A 
INNER JOIN
(SELECT * FROM PANEL_GROCERY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK = B.WEEK AND A.COLUPC = B.COLUPC;
QUIT;

PROC PRINT DATA=PS_GROCERY(OBS=20);RUN;

/*** PRODUCT_TISSUE ***/

DATA TISSUE;
INFILE "H:\Project\prod_tissue.csv" DLM=',' FIRSTOBS=2 MISSOVER;
LENGTH L4 $30. UPC $30.;
INPUT L1 $ L2 $	L3 $ L4 $ L5 $ L9 $ Level $ UPC $ SY $ GE $ VEND $ ITEM $ STUBSPEC $ VOL_EQ PRODUCT_TYPE $ COLOR $ SIZE $ ADDITIVES $
NUM_PLY	$ DISPENSER	$ NUM_SHEETS $;
RUN;

PROC SQL;
CREATE TABLE BRAND_TISSUE AS
SELECT * FROM TISSUE WHERE L4 IN ('KIMBERLY CLARK CORP','PROCTER & GAMBLE','PRIVATE LABEL');
QUIT;

/*** MANIPULATING COLUPC ***/

DATA BRAND_TISSUE;
SET BRAND_TISSUE;

IF LENGTH(ITEM)=2 THEN ITEM="000"||TRIM(ITEM);
IF LENGTH(ITEM)=3 THEN ITEM="00"||TRIM(ITEM);
IF LENGTH(ITEM)=4 THEN ITEM="0"||TRIM(ITEM);

IF LENGTH(VEND)=2 THEN VEND="000"||TRIM(VEND);
IF LENGTH(VEND)=3 THEN VEND="00"||TRIM(VEND);
IF LENGTH(VEND)=4 THEN VEND="0"||TRIM(VEND);

SY=TRIM(SY);
GE=TRIM(GE);
VEND=TRIM(VEND);
ITEM=TRIM(ITEM);

COLUPC=SY||GE||VEND||ITEM;
RUN;

DATA BRAND_TISSUE;
SET BRAND_TISSUE;
COLUPC=COMPRESS(COLUPC);
RUN;

DATA BRAND_TISSUE (KEEP = L4 COLUPC VOL_EQ);
SET BRAND_TISSUE;
RUN;

PROC PRINT DATA=BRAND_TISSUE(OBS=20);
RUN;

/*** JOINING "TISSUE" & "GROCERY STORE/PANEL DATA" ***/

PROC SQL;
CREATE TABLE FINAL AS
SELECT * FROM
(SELECT * FROM BRAND_TISSUE) AS A 
INNER JOIN
(SELECT * FROM PS_GROCERY) AS B
ON A.COLUPC=B.COLUPC;
QUIT;

PROC PRINT DATA=FINAL(OBS=20);
RUN;

/******** DATA MANIPULATION **********/

PROC SQL;
CREATE TABLE BRANDS_3 AS
SELECT COUNT(DISTINCT(L4)) AS C_L4,IRI_KEY,WEEK FROM FINAL GROUP BY IRI_KEY,WEEK HAVING C_L4 = 3;
QUIT;

PROC SQL;
CREATE TABLE GROCERY_FINAL AS
SELECT * FROM
(SELECT * FROM BRANDS_3) AS A 
INNER JOIN
(SELECT * FROM FINAL) AS B
ON A.WEEK=B.WEEK AND A.IRI_KEY = B.IRI_KEY;
QUIT;

DATA GROCERY_FINAL (DROP = C_L4 P_UNITS P_DOLLARS);
SET GROCERY_FINAL;
RUN;

PROC PRINT DATA=GROCERY_FINAL(OBS=20);
RUN;

/*********** CALCULATING PRICE DISPLAY FEATURE AND PROMOTION ************/

DATA GROCERY_FINAL;
SET GROCERY_FINAL;
TOT_VOL = VOL_EQ*100*UNITS;
PRICE_PER_SHEET = DOLLARS/TOT_VOL;
RUN;

DATA GROCERY_FINAL;
SET GROCERY_FINAL;

IF F='NONE' THEN F_1=0;
ELSE F_1=1;

IF D='0' THEN D_1=0;
ELSE D_1=1;

IF PR='0' THEN PR_1=0;
ELSE PR_1=1;

RUN;

PROC PRINT DATA=GROCERY_FINAL(OBS=20);
RUN;

/**************** KC ******************/

PROC SQL;
CREATE TABLE KIMBERLY_CLARK AS
SELECT * FROM GROCERY_FINAL WHERE L4 = 'KIMBERLY CLARK CORP';
QUIT;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_GROUPED AS
SELECT IRI_KEY,WEEK,COLUPC,SUM(UNITS) AS TOT_UNITS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS, SUM(TOT_VOL) AS TOT_SHEETS FROM KIMBERLY_CLARK
GROUP BY IRI_KEY,WEEK,COLUPC;
QUIT;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEK_SHEETS
FROM KIMBERLY_CLARK
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM KIMBERLY_CLARK_GROUPED) AS A
LEFT JOIN
(SELECT * FROM KIMBERLY_CLARK_WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

DATA KIMBERLY_CLARK_GROUPED_1;
SET KIMBERLY_CLARK_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

RUN;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS KC_TOT_UNITS, SUM(TOT_DOLLARS) AS KC_TOT_DOLLARS,SUM(W_PRICE) AS KC_W_PRICE,
SUM(W_FEATURE) AS KC_W_FEATURE, SUM(W_DISPLAY) AS KC_W_DISPLAY, SUM(W_PROMOTION) AS KC_W_PROMOTION, SUM(TOT_SHEETS) AS KC_SUM_SHEETS
FROM KIMBERLY_CLARK_GROUPED_1 
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=KIMBERLY_CLARK_FINAL(OBS=20);
RUN;

/**************** PL ******************/

PROC SQL;
CREATE TABLE PRIVATE_LABEL AS
SELECT * FROM GROCERY_FINAL WHERE L4 = 'PRIVATE LABEL';
QUIT;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_GROUPED AS
SELECT IRI_KEY,WEEK,COLUPC,SUM(UNITS) AS TOT_UNITS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS, SUM(TOT_VOL) AS TOT_SHEETS FROM PRIVATE_LABEL
GROUP BY IRI_KEY,WEEK,COLUPC;
QUIT;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEK_SHEETS
FROM PRIVATE_LABEL
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM PRIVATE_LABEL_GROUPED) AS A
LEFT JOIN
(SELECT * FROM PRIVATE_LABEL_WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

DATA PRIVATE_LABEL_GROUPED_1;
SET PRIVATE_LABEL_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

RUN;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS PL_TOT_UNITS, SUM(TOT_DOLLARS) AS PL_TOT_DOLLARS,SUM(W_PRICE) AS PL_W_PRICE,
SUM(W_FEATURE) AS PL_W_FEATURE, SUM(W_DISPLAY) AS PL_W_DISPLAY, SUM(W_PROMOTION) AS PL_W_PROMOTION, SUM(TOT_SHEETS) AS PL_SUM_SHEETS
FROM PRIVATE_LABEL_GROUPED_1 
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=PRIVATE_LABEL_FINAL(OBS=20);
RUN;

/**************** PG ******************/

PROC SQL;
CREATE TABLE PROCTER_GAMBLE AS
SELECT * FROM GROCERY_FINAL WHERE L4 = 'PROCTER & GAMBLE';
QUIT;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_GROUPED AS
SELECT IRI_KEY,WEEK,COLUPC,SUM(UNITS) AS TOT_UNITS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS, SUM(TOT_VOL) AS TOT_SHEETS FROM PROCTER_GAMBLE
GROUP BY IRI_KEY,WEEK,COLUPC;
QUIT;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEK_SHEETS
FROM PROCTER_GAMBLE
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM PROCTER_GAMBLE_GROUPED) AS A
LEFT JOIN
(SELECT * FROM PROCTER_GAMBLE_WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

DATA PROCTER_GAMBLE_GROUPED_1;
SET PROCTER_GAMBLE_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

RUN;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS PG_TOT_UNITS, SUM(TOT_DOLLARS) AS PG_TOT_DOLLARS,SUM(W_PRICE) AS PG_W_PRICE,
SUM(W_FEATURE) AS PG_W_FEATURE, SUM(W_DISPLAY) AS PG_W_DISPLAY, SUM(W_PROMOTION) AS PG_W_PROMOTION, SUM(TOT_SHEETS) AS PG_SUM_SHEETS
FROM PROCTER_GAMBLE_GROUPED_1 
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=PROCTER_GAMBLE_FINAL(OBS=20);
RUN;

/*****JOIN******/

DATA GROCERY_FINAL (KEEP = PANID IRI_KEY WEEK L4 COLUPC);
SET GROCERY_FINAL;
RUN;

PROC PRINT DATA=GROCERY_FINAL(OBS=20);
RUN;

PROC SQL;
CREATE TABLE FINAL_KC AS
SELECT * FROM 
(SELECT * FROM GROCERY_FINAL) AS A
INNER JOIN
(SELECT * FROM KIMBERLY_CLARK_FINAL) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC SQL;
CREATE TABLE FINAL_KC_PG AS
SELECT * FROM 
(SELECT * FROM FINAL_KC) AS A
INNER JOIN
(SELECT * FROM PROCTER_GAMBLE_FINAL) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC SQL;
CREATE TABLE FINAL_KC_PG_PL AS
SELECT * FROM 
(SELECT * FROM FINAL_KC_PG) AS A
INNER JOIN
(SELECT * FROM PRIVATE_LABEL_FINAL) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC PRINT DATA=FINAL_KC_PG_PL(OBS=20);
RUN;

/*** IMPORTING DEMOGRAPHIC DATA ***/

PROC IMPORT DATAFILE='H:\Project\ads demo1.csv'
OUT=DEMOGRAPHICS
DBMS=CSV
REPLACE;
GETNAMES=YES;
DELIMITER=",";
RUN;

PROC SQL;
CREATE TABLE GROCERY_WITH_DEMOGRAPHIC AS
SELECT * FROM
(SELECT * FROM FINAL_KC_PG_PL) AS A 
LEFT JOIN
(SELECT * FROM DEMOGRAPHICS) AS B
ON A.PANID=B.PANELIST_ID;
QUIT;

PROC PRINT DATA=GROCERY_WITH_DEMOGRAPHIC(OBS=20);
RUN;

/*************FINAL DATASET***************************/

DATA PA.MDC_GROCERY(DROP = Panelist_ID);
SET GROCERY_WITH_DEMOGRAPHIC ;
IF L4='KIMBERLY CLARK CORP' THEN L4='KLEENEX';
ELSE IF L4='PROCTER & GAMBLE' THEN L4='PUFFS';
RUN;

PROC PRINT DATA=PA.MDC_GROCERY(OBS=20);
RUN;

/******************************* DRUG ******************************************/

/*** IMPORTING DRUG PANEL DATA ***/

DATA PANEL_DRUG;
INFILE 'H:\Project\factiss_PANEL_DR_1114_1165.dat' FIRSTOBS=2 DLM='09'x;
LENGTH COLUPC $13.;
INPUT PANID WEEK $ UNITS OUTLET $ DOLLARS IRI_KEY $ COLUPC $;
RUN;

DATA PANEL_DRUG;
SET PANEL_DRUG;
IF LENGTH(COLUPC)=11 THEN COLUPC="0"||COLUPC;
RUN;

DATA PANEL_DRUG(DROP = OUTLET);
SET PANEL_DRUG(RENAME = (UNITS = P_UNITS DOLLARS = P_DOLLARS));
RUN;

PROC PRINT DATA=PANEL_DRUG(OBS=20);RUN;

/*** IMPORTING DRUG SCANNER DATA ***/

DATA DRUG;
INFILE 'H:\Project\factiss_drug_1114_1165.txt' FIRSTOBS=2;
INPUT IRI_KEY $ 1-7 WEEK $ 9-12 SY $ 14-15 GE $ 17-18 VEND $ 20-24 ITEM $ 26-30 UNITS 32-36 DOLLARS 38-45 
F $ 47-50 D $ 52-52 PR $ 54-54;
RUN;

DATA DRUG;
SET DRUG;
IF LENGTH(ITEM)=2 THEN ITEM="000"||TRIM(ITEM);
IF LENGTH(ITEM)=3 THEN ITEM="00"||TRIM(ITEM);
IF LENGTH(ITEM)=4 THEN ITEM="0"||TRIM(ITEM);
RUN;

DATA DRUG;
SET DRUG;
IF LENGTH(VEND)=2 THEN VEND="000"||TRIM(VEND);
IF LENGTH(VEND)=3 THEN VEND="00"||TRIM(VEND);
IF LENGTH(VEND)=4 THEN VEND="0"||TRIM(VEND);
RUN;

DATA DRUG;
SET DRUG;
UPC = SY||GE||VEND||ITEM;
RUN;

DATA DRUG;
SET DRUG;
COLUPC=COMPRESS(UPC);
RUN;

DATA DRUG (DROP = SY GE VEND ITEM UPC);
SET DRUG;
RUN;

PROC PRINT DATA=DRUG(OBS=20);RUN;

/*** JOINING DRUG STORE AND PANEL DATA ***/

PROC SQL;
CREATE TABLE PS_DRUG AS
SELECT * FROM
(SELECT * FROM DRUG) AS A 
INNER JOIN
(SELECT * FROM PANEL_DRUG) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK = B.WEEK AND A.COLUPC = B.COLUPC;
QUIT;

PROC PRINT DATA=PS_DRUG(OBS=20);RUN;

/*** PRODUCT_TISSUE ***/

DATA TISSUE;
INFILE "H:\Project\prod_tissue.csv" DLM=',' FIRSTOBS=2 MISSOVER;
LENGTH L4 $30. UPC $30.;
INPUT L1 $ L2 $	L3 $ L4 $ L5 $ L9 $ Level $ UPC $ SY $ GE $ VEND $ ITEM $ STUBSPEC $ VOL_EQ PRODUCT_TYPE $ COLOR $ SIZE $ ADDITIVES $
NUM_PLY	$ DISPENSER	$ NUM_SHEETS $;
RUN;

PROC SQL;
CREATE TABLE BRAND_TISSUE AS
SELECT * FROM TISSUE WHERE L4 IN ('KIMBERLY CLARK CORP','PROCTER & GAMBLE','PRIVATE LABEL');
QUIT;

/*** MANIPULATING COLUPC ***/

DATA BRAND_TISSUE;
SET BRAND_TISSUE;

IF LENGTH(ITEM)=2 THEN ITEM="000"||TRIM(ITEM);
IF LENGTH(ITEM)=3 THEN ITEM="00"||TRIM(ITEM);
IF LENGTH(ITEM)=4 THEN ITEM="0"||TRIM(ITEM);

IF LENGTH(VEND)=2 THEN VEND="000"||TRIM(VEND);
IF LENGTH(VEND)=3 THEN VEND="00"||TRIM(VEND);
IF LENGTH(VEND)=4 THEN VEND="0"||TRIM(VEND);

SY=TRIM(SY);
GE=TRIM(GE);
VEND=TRIM(VEND);
ITEM=TRIM(ITEM);

COLUPC=SY||GE||VEND||ITEM;
RUN;

DATA BRAND_TISSUE;
SET BRAND_TISSUE;
COLUPC=COMPRESS(COLUPC);
RUN;

DATA BRAND_TISSUE (KEEP = L4 COLUPC VOL_EQ);
SET BRAND_TISSUE;
RUN;

PROC PRINT DATA=BRAND_TISSUE(OBS=20);
RUN;

/*** JOINING "TISSUE" & "DRUG STORE/PANEL DATA" ***/

PROC SQL;
CREATE TABLE FINAL AS
SELECT * FROM
(SELECT * FROM BRAND_TISSUE) AS A 
INNER JOIN
(SELECT * FROM PS_DRUG) AS B
ON A.COLUPC=B.COLUPC;
QUIT;

PROC PRINT DATA=FINAL(OBS=20);
RUN;

/******** DATA MANIPULATION **********/

PROC SQL;
CREATE TABLE BRANDS_3 AS
SELECT COUNT(DISTINCT(L4)) AS C_L4,IRI_KEY,WEEK FROM FINAL GROUP BY IRI_KEY,WEEK HAVING C_L4 = 3;
QUIT;

PROC SQL;
CREATE TABLE DRUG_FINAL AS
SELECT * FROM
(SELECT * FROM BRANDS_3) AS A 
INNER JOIN
(SELECT * FROM FINAL) AS B
ON A.WEEK=B.WEEK AND A.IRI_KEY = B.IRI_KEY;
QUIT;

DATA DRUG_FINAL (DROP = C_L4 P_UNITS P_DOLLARS);
SET DRUG_FINAL;
RUN;

PROC PRINT DATA=DRUG_FINAL(OBS=20);
RUN;

/*********** CALCULATING PRICE DISPLAY FEATURE AND PROMOTION ************/

DATA DRUG_FINAL;
SET DRUG_FINAL;
TOT_VOL = VOL_EQ*100*UNITS;
PRICE_PER_SHEET = DOLLARS/TOT_VOL;
RUN;

DATA DRUG_FINAL;
SET DRUG_FINAL;

IF F='NONE' THEN F_1=0;
ELSE F_1=1;

IF D='0' THEN D_1=0;
ELSE D_1=1;

IF PR='0' THEN PR_1=0;
ELSE PR_1=1;

RUN;

PROC PRINT DATA=DRUG_FINAL(OBS=20);
RUN;

/**************** KC ******************/

PROC SQL;
CREATE TABLE KIMBERLY_CLARK AS
SELECT * FROM DRUG_FINAL WHERE L4 = 'KIMBERLY CLARK CORP';
QUIT;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_GROUPED AS
SELECT IRI_KEY,WEEK,COLUPC,SUM(UNITS) AS TOT_UNITS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS, SUM(TOT_VOL) AS TOT_SHEETS FROM KIMBERLY_CLARK
GROUP BY IRI_KEY,WEEK,COLUPC;
QUIT;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEK_SHEETS
FROM KIMBERLY_CLARK
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM KIMBERLY_CLARK_GROUPED) AS A
LEFT JOIN
(SELECT * FROM KIMBERLY_CLARK_WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

DATA KIMBERLY_CLARK_GROUPED_1;
SET KIMBERLY_CLARK_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

RUN;

PROC SQL;
CREATE TABLE KIMBERLY_CLARK_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS KC_TOT_UNITS, SUM(TOT_DOLLARS) AS KC_TOT_DOLLARS,SUM(W_PRICE) AS KC_W_PRICE,
SUM(W_FEATURE) AS KC_W_FEATURE, SUM(W_DISPLAY) AS KC_W_DISPLAY, SUM(W_PROMOTION) AS KC_W_PROMOTION, SUM(TOT_SHEETS) AS KC_SUM_SHEETS
FROM KIMBERLY_CLARK_GROUPED_1 
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=KIMBERLY_CLARK_FINAL(OBS=20);
RUN;

/**************** PL ******************/

PROC SQL;
CREATE TABLE PRIVATE_LABEL AS
SELECT * FROM DRUG_FINAL WHERE L4 = 'PRIVATE LABEL';
QUIT;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_GROUPED AS
SELECT IRI_KEY,WEEK,COLUPC,SUM(UNITS) AS TOT_UNITS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS, SUM(TOT_VOL) AS TOT_SHEETS FROM PRIVATE_LABEL
GROUP BY IRI_KEY,WEEK,COLUPC;
QUIT;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEK_SHEETS
FROM PRIVATE_LABEL
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM PRIVATE_LABEL_GROUPED) AS A
LEFT JOIN
(SELECT * FROM PRIVATE_LABEL_WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

DATA PRIVATE_LABEL_GROUPED_1;
SET PRIVATE_LABEL_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

RUN;

PROC SQL;
CREATE TABLE PRIVATE_LABEL_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS PL_TOT_UNITS, SUM(TOT_DOLLARS) AS PL_TOT_DOLLARS,SUM(W_PRICE) AS PL_W_PRICE,
SUM(W_FEATURE) AS PL_W_FEATURE, SUM(W_DISPLAY) AS PL_W_DISPLAY, SUM(W_PROMOTION) AS PL_W_PROMOTION, SUM(TOT_SHEETS) AS PL_SUM_SHEETS
FROM PRIVATE_LABEL_GROUPED_1 
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=PRIVATE_LABEL_FINAL(OBS=20);
RUN;

/**************** PG ******************/

PROC SQL;
CREATE TABLE PROCTER_GAMBLE AS
SELECT * FROM DRUG_FINAL WHERE L4 = 'PROCTER & GAMBLE';
QUIT;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_GROUPED AS
SELECT IRI_KEY,WEEK,COLUPC,SUM(UNITS) AS TOT_UNITS, SUM(DOLLARS) AS TOT_DOLLARS, SUM(F_1) AS TOT_F, 
SUM(D_1) AS TOT_D, SUM(PR_1) AS TOT_PR, AVG(PRICE_PER_SHEET) AS AVG_PPS, SUM(TOT_VOL) AS TOT_SHEETS FROM PROCTER_GAMBLE
GROUP BY IRI_KEY,WEEK,COLUPC;
QUIT;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_WEEKLY AS
SELECT IRI_KEY,WEEK,SUM(UNITS) AS TOT_IRI_WEEK_UNITS, SUM(TOT_VOL) AS TOT_IRI_WEEK_SHEETS
FROM PROCTER_GAMBLE
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_GROUPED_1 AS
SELECT A.*, B.* FROM 
(SELECT * FROM PROCTER_GAMBLE_GROUPED) AS A
LEFT JOIN
(SELECT * FROM PROCTER_GAMBLE_WEEKLY) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

DATA PROCTER_GAMBLE_GROUPED_1;
SET PROCTER_GAMBLE_GROUPED_1;

W_PRICE = AVG_PPS*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_F=0 THEN W_FEATURE=0;
ELSE W_FEATURE=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_D=0 THEN W_DISPLAY=0;
ELSE W_DISPLAY=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

IF TOT_PR=0 THEN W_PROMOTION=0;
ELSE W_PROMOTION=1*(TOT_SHEETS/TOT_IRI_WEEK_SHEETS);

RUN;

PROC SQL;
CREATE TABLE PROCTER_GAMBLE_FINAL AS
SELECT IRI_KEY,WEEK,SUM(TOT_UNITS) AS PG_TOT_UNITS, SUM(TOT_DOLLARS) AS PG_TOT_DOLLARS,SUM(W_PRICE) AS PG_W_PRICE,
SUM(W_FEATURE) AS PG_W_FEATURE, SUM(W_DISPLAY) AS PG_W_DISPLAY, SUM(W_PROMOTION) AS PG_W_PROMOTION, SUM(TOT_SHEETS) AS PG_SUM_SHEETS
FROM PROCTER_GAMBLE_GROUPED_1 
GROUP BY IRI_KEY,WEEK;
QUIT;

PROC PRINT DATA=PROCTER_GAMBLE_FINAL(OBS=20);
RUN;


/*****JOIN******/

DATA DRUG_FINAL (KEEP = PANID IRI_KEY WEEK L4 COLUPC);
SET DRUG_FINAL;
RUN;

PROC PRINT DATA=DRUG_FINAL(OBS=20);
RUN;

PROC SQL;
CREATE TABLE FINAL_KC AS
SELECT * FROM 
(SELECT * FROM DRUG_FINAL) AS A
INNER JOIN
(SELECT * FROM KIMBERLY_CLARK_FINAL) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC SQL;
CREATE TABLE FINAL_KC_PG AS
SELECT * FROM 
(SELECT * FROM FINAL_KC) AS A
INNER JOIN
(SELECT * FROM PROCTER_GAMBLE_FINAL) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC SQL;
CREATE TABLE FINAL_KC_PG_PL AS
SELECT * FROM 
(SELECT * FROM FINAL_KC_PG) AS A
INNER JOIN
(SELECT * FROM PRIVATE_LABEL_FINAL) AS B
ON A.IRI_KEY=B.IRI_KEY AND A.WEEK=B.WEEK;
QUIT;

PROC PRINT DATA=FINAL_KC_PG_PL(OBS=20);
RUN;

/*** IMPORTING DEMOGRAPHIC DATA ***/

PROC IMPORT DATAFILE='H:\Project\ads demo1.csv'
OUT=DEMOGRAPHICS
DBMS=CSV
REPLACE;
GETNAMES=YES;
DELIMITER=",";
RUN;

PROC SQL;
CREATE TABLE DRUG_WITH_DEMOGRAPHIC AS
SELECT * FROM
(SELECT * FROM FINAL_KC_PG_PL) AS A 
LEFT JOIN
(SELECT * FROM DEMOGRAPHICS) AS B
ON A.PANID=B.PANELIST_ID;
QUIT;

PROC PRINT DATA=DRUG_WITH_DEMOGRAPHIC(OBS=20);
RUN;

/*************FINAL DATASET***************************/

DATA PA.MDC_DRUG(DROP = Panelist_ID);
SET DRUG_WITH_DEMOGRAPHIC ;
IF L4='KIMBERLY CLARK CORP' THEN L4='KLEENEX';
ELSE IF L4='PROCTER & GAMBLE' THEN L4='PUFFS';
RUN;

PROC PRINT DATA=PA.MDC_DRUG(OBS=20);
RUN;

/***************** IMPORTING DRUG AND GROCERY MDC DATA ***********************************/

DATA DRUG;
SET PA.MDC_DRUG;
RUN;

DATA GROCERY;
SET PA.MDC_GROCERY;
RUN;

DATA MDC;
SET DRUG GROCERY;
RUN;

PROC PRINT DATA = MDC(OBS = 20);RUN;

PROC SQL;
CREATE TABLE COUNT AS
SELECT COUNT(DISTINCT PANID) FROM MDC;
QUIT;

PROC PRINT DATA = COUNT;RUN;


DATA MDC (DROP = Panelist_Type	HH_RACE	Type_of_Residential_Possession	COUNTY	HH_AGE	HH_EDU	HH_OCC	Education_Level_Reached_by_Male	
Occupation_Code_of_Male_HH	Male_Working_Hour_Code	MALE_SMOKE	Education_Level_Reached_by_Femal	
Occupation_Code_of_Female_HH	Female_Working_Hour_Code	FEM_SMOKE	Children_Group_Code	Marital_Status	Language	
Number_of_TVs_Used_by_HH	Number_of_TVs_Hooked_to_Cable	Year	HISP_FLAG	HISP_CAT	HH_Head_Race__RACE2_	HH_Head_Race__RACE3_	
Microwave_Owned_by_HH	ZIPCODE	FIPSCODE	market_based_upon_zipcode	IRI_Geography_Number	EXT_FACT);
SET MDC;
RUN;

PROC SQL;
CREATE TABLE MDC AS
SELECT * FROM MDC WHERE Combined_Pre_Tax_Income_of_HH <> 0;
QUIT;

PROC SQL;
CREATE TABLE MDC AS
SELECT * FROM MDC WHERE Age_Group_Applied_to_Female_HH <> 0;
QUIT;

PROC SQL;
CREATE TABLE MDC AS
SELECT * FROM MDC WHERE Age_Group_Applied_to_Male_HH <> 0;
QUIT;

DATA MDC;
SET MDC (RENAME = (Combined_Pre_Tax_Income_of_HH = INCOME Family_Size = FAM_SIZE Age_Group_Applied_to_Female_HH = FEMALE_AGEGP
Age_Group_Applied_to_Male_HH = MALE_AGEGP));
NUM_PETS = Number_of_Dogs + Number_of_Cats;
RUN;

DATA MDC (DROP = Number_of_Dogs Number_of_Cats);
SET MDC;
RUN;

DATA MDC;
SET MDC;
IF L4='KLEENEX' THEN BC=1;
IF L4='PUFFS' THEN BC=2;
IF L4='PRIVATE LABEL' THEN BC=3;
RUN;

PROC PRINT DATA = MDC(OBS=10);
RUN;

/*DATA PREP FOR MDC*/

DATA MDC_FINAL(KEEP=ID DECISION MODE PRICE PR F D INCOME FAM_SIZE FEMALE_AGEGP NUM_PETS MALE_AGEGP);
SET MDC;
ARRAY PR_A{3} KC_W_PROMOTION PG_W_PROMOTION PL_W_PROMOTION;
ARRAY D_A{3} KC_W_DISPLAY PG_W_DISPLAY PL_W_DISPLAY;
ARRAY PRICE_A{3} KC_W_PRICE PG_W_PRICE PL_W_PRICE;
ARRAY F_A{3} KC_W_FEATURE PG_W_FEATURE PL_W_FEATURE;
RETAIN ID 0;
ID+1;
DO I=1 TO 3;
MODE=I;
PR=PR_A{I};
D=D_A{I};
PRICE=PRICE_A{I};
F=F_A{I};
DECISION=(BC=I);
OUTPUT;
END;
RUN;

PROC PRINT DATA = MDC_FINAL(OBS=10);
RUN;

/*ADD DEMO DATA FAMILY SIZE, PETS, FEMALE AGE AND INCOME LEVEL*/

DATA MDC_FINAL;
SET MDC_FINAL;
BC1=0;
BC2=0;
IF MODE = 1 THEN BC1 = 1;
IF MODE = 2 THEN BC2 = 1;
FAM1 = FAM_SIZE*BC1;
FAM2 = FAM_SIZE*BC2;
INC1 = INCOME*BC1;
INC2 = INCOME*BC2;
FAGEGP1 = FEMALE_AGEGP*BC1;
FAGEGP2 = FEMALE_AGEGP*BC2;
MAGEGP1 = MALE_AGEGP*BC1;
MAGEGP2 = MALE_AGEGP*BC2;
NPETS1 = NUM_PETS*BC1;
NPETS2 = NUM_PETS*BC2;
RUN;

PROC PRINT DATA = MDC_FINAL(OBS=10);
RUN;

PROC MDC DATA=MDC_FINAL;
MODEL DECISION= PRICE BC1 BC2 PR D F FAM1 FAM2 INC1 INC2 FAGEGP1 FAGEGP2 MAGEGP1 MAGEGP2 NPETS1 NPETS2/TYPE=CLOGIT NCHOICE=3;
ID ID;
OUTPUT OUT=PROB_MDC PRED=P;
RUN;

PROC PRINT DATA = MDC_FINAL(OBS = 20);RUN;

PROC MEANS DATA = MDC_FINAL; 
VAR PRICE; 
CLASS MODE;
RUN;

/***** PREDICTION *****/

PROC PRINT DATA = PROB_MDC(OBS = 20);RUN;

PROC SQL;
CREATE TABLE PREDICT AS 
SELECT P, ID, DECISION
FROM PROB_MDC
ORDER BY ID, P DESC;
QUIT;

DATA PREDICT;
SET PREDICT;
PREDICT=0;
BY ID;
IF FIRST.ID THEN PREDICT=1;
RUN;

PROC FREQ DATA=PREDICT;
TABLE PREDICT*DECISION;
RUN;




